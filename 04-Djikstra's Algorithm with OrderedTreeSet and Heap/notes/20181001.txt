Date: 10/01/2018
================

Important Data Structures to have under our sleeve:
    1. Hash Tables
    2. Heap

Heap:
    - A balanced, complete Binary Tree.
        - Full binary tree on all levels but lowest level.
            - Filled left to right.
    - The root of the heap is always the greatest/smallest node.
    - The left and right subtrees are also heaps.

    - parent = (childidx-1) // 2
    - childidx1 = prtidx *2 + 1
    - childidx2 = prtidx *2 + 2

    - Build a heap in linear time.
        - Start at the end and perc up between child and parent.
        - When two children take the smallest.

    -Building a heap:
        - SiftdownFromTo:
            - From index to index.
        - Sorted heap.
            - get biggest, move to end.
            - swap last with biggest and siftdown.
                - when sifting down, pick greated child and keep swaping until cant swap anymore.

        - Go backwards.
            - Start at the first paretnt.
                - len of list -2 // 2
                    - sift down from the index gotten above.
                    - keep moving one index up and repeat the siftdown.
